@model StatisticsModel

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
            <div class="position-sticky">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="#">
                            <i class="bi bi-house-door"></i> Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            <i class="bi bi-bar-chart-line"></i> Statistics
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            <i class="bi bi-list-task"></i> Tasks
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            <i class="bi bi-person"></i> Profile
                        </a>
                    </li>
                </ul>
            </div>
        </nav>

        <!-- Content Section -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Dashboard</h1>
            </div>
            <div class="content">
                <!-- Your page content here -->
                <div>
                    <h3>Task Completion Breakdown</h3>
                    <canvas id="taskCompletionChart" width="400" height="400"></canvas>
                </div>

                <div>
                    <h3>Task Deadline Completion</h3>
                    <canvas id="taskDeadlineChart" width="400" height="400"></canvas>
                </div>

                <div>
                    <h3>Overdue Tasks</h3>
                    <canvas id="overdueTasksChart" width="400" height="400"></canvas>
                </div>

                <div>
                    <h3>Tasks by Priority</h3>
                    <canvas id="tasksByPriorityChart" width="400" height="400"></canvas>
                </div>
            </div>
        </main>
    </div>
</div>

<script>
    // Serialize the model data into JavaScript
    var stats = @Html.Raw(Json.Serialize(Model));

    // Task Completion Breakdown Chart
    var ctx1 = document.getElementById('taskCompletionChart').getContext('2d');
    var taskCompletionChart = new Chart(ctx1, {
        type: 'pie',
        data: {
            labels: ['Completed Tasks', 'Pending Tasks'],
            datasets: [{
                data: [stats.CompletedTasksCount, stats.PendingTasksCount],
                backgroundColor: ['#36A2EB', '#FF6384']
            }]
        },
        options: {
            responsive: true,
        }
    });

    // Task Deadline Completion (Before vs After)
    var ctx2 = document.getElementById('taskDeadlineChart').getContext('2d');
    var taskDeadlineChart = new Chart(ctx2, {
        type: 'pie',
        data: {
            labels: ['Completed Before Deadline', 'Completed After Deadline'],
            datasets: [{
                data: [stats.TasksCompletedBeforeDeadline, stats.TasksCompletedAfterDeadline],
                backgroundColor: ['#4BC0C0', '#FFCE56']
            }]
        },
        options: {
            responsive: true,
        }
    });

    // Overdue Tasks Pie Chart
    var ctx3 = document.getElementById('overdueTasksChart').getContext('2d');
    var overdueTasksChart = new Chart(ctx3, {
        type: 'pie',
        data: {
            labels: ['Overdue Tasks', 'Completed Tasks'],
            datasets: [{
                data: [stats.OverdueTasksCount, stats.CompletedTasksCount],
                backgroundColor: ['#FF9F40', '#36A2EB']
            }]
        },
        options: {
            responsive: true,
        }
    });

    // Tasks by Priority Pie Chart
    var ctx4 = document.getElementById('tasksByPriorityChart').getContext('2d');
    var priorityLabels = Object.keys(stats.TasksByPriority); // Extract priority levels (High, Medium, Low)
    var priorityData = Object.values(stats.TasksByPriority); // Extract corresponding counts

    var tasksByPriorityChart = new Chart(ctx4, {
        type: 'pie',
        data: {
            labels: priorityLabels,
            datasets: [{
                data: priorityData,
                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'] // Colors for high, medium, and low
            }]
        },
        options: {
            responsive: true,
        }
    });
</script>